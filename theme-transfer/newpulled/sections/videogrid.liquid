<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.css"/>

{%- liquid
  assign padding_horizontal = section.settings.padding_horizontal
  assign padding_horizontal_mobile = section.settings.padding_horizontal_mobile
  assign padding_top = section.settings.padding_top
  assign padding_bottom = section.settings.padding_bottom
  assign border_color = section.settings.border_color
  assign border_thickness = section.settings.border_thickness
  assign margin_top = section.settings.margin_top
  assign margin_bottom = section.settings.margin_bottom
  assign background_color = section.settings.background_color
  assign background_gradient = section.settings.background_gradient
  assign full_width = section.settings.full_width
  assign content_width = section.settings.content_width
  assign lazy = section.settings.lazy

  assign hide_icon = section.settings.hide_icon
  assign icon = section.settings.icon
  assign icon_size_mobile = section.settings.icon_size_mobile
  assign icon_size = section.settings.icon_size
  assign icon_align_mobile = section.settings.icon_align_mobile
  assign icon_align = section.settings.icon_align

  assign heading = section.settings.heading
  assign heading_size = section.settings.heading_size
  assign heading_size_mobile = section.settings.heading_size_mobile
  assign heading_color = section.settings.heading_color
  assign heading_custom = section.settings.heading_custom
  assign heading_font = section.settings.heading_font
  assign heading_height = section.settings.heading_height
  assign heading_align = section.settings.heading_align
  assign heading_align_mobile = section.settings.heading_align_mobile
  assign heading_mt = section.settings.heading_mt

  assign text = section.settings.text
  assign text_size = section.settings.text_size
  assign text_size_mobile = section.settings.text_size_mobile
  assign text_color = section.settings.text_color
  assign text_custom = section.settings.text_custom
  assign text_font = section.settings.text_font
  assign text_height = section.settings.text_height
  assign text_align = section.settings.text_align
  assign text_align_mobile = section.settings.text_align_mobile
  assign text_mt = section.settings.text_mt
  assign text_width_mobile = section.settings.text_width_mobile
  assign text_width = section.settings.text_width

  assign list_mt = section.settings.list_mt
  assign list_border_thickness = section.settings.list_border_thickness
  assign list_border_color = section.settings.list_border_color
  assign list_gap_mobile = section.settings.list_gap_mobile
  assign list_gap = section.settings.list_gap

  assign list_item_width_mobile = section.settings.list_item_width_mobile
  assign list_item_width = section.settings.list_item_width
  assign list_item_size = section.settings.list_item_size
  assign list_item_size_mobile = section.settings.list_item_size_mobile
  assign list_item_height = section.settings.list_item_height
  assign list_item_border_thickness = section.settings.list_item_border_thickness
  assign list_item_border_color = section.settings.list_item_border_color
  assign list_item_border_hover_color = section.settings.list_item_border_hover_color
  assign list_item_color = section.settings.list_item_color
  assign list_item_hover_color = section.settings.list_item_hover_color
  assign list_item_active_color = section.settings.list_item_active_color
  assign list_item_custom = section.settings.list_item_custom
  assign list_item_font = section.settings.list_item_font

  assign grid_row_mobile = section.settings.grid_row_mobile
  assign grid_row = section.settings.grid_row
  assign grid_gap = section.settings.grid_gap
  assign grid_gap_mobile = section.settings.grid_gap_mobile
  assign grid_mt = section.settings.grid_mt
  assign grid_width_mobile = section.settings.grid_width_mobile
  assign grid_width = section.settings.grid_width

  assign video_ratio = section.settings.video_ratio
  assign video_radius = section.settings.video_radius
  assign video_border_thickness = section.settings.video_border_thickness
  assign video_border_color = section.settings.video_border_color
  assign video_shadow = section.settings.video_shadow
  assign video_shadow_color = section.settings.video_shadow_color
  assign autoplay_videos = section.settings.autoplay_videos

  assign bottom_text = section.settings.bottom_text
  assign bottom_text_size = section.settings.bottom_text_size
  assign bottom_text_size_mobile = section.settings.bottom_text_size_mobile
  assign bottom_text_color = section.settings.bottom_text_color
  assign bottom_text_custom = section.settings.bottom_text_custom
  assign bottom_text_font = section.settings.bottom_text_font
  assign bottom_text_height = section.settings.bottom_text_height
  assign bottom_text_align = section.settings.bottom_text_align
  assign bottom_text_align_mobile = section.settings.bottom_text_align_mobile
  assign bottom_text_mt = section.settings.bottom_text_mt
  assign bottom_text_width_mobile = section.settings.bottom_text_width_mobile
  assign bottom_text_width = section.settings.bottom_text_width

  assign button = section.settings.button
  assign button_size = section.settings.button_size
  assign button_size_mobile = section.settings.button_size_mobile
  assign button_color = section.settings.button_color
  assign button_hover_color = section.settings.button_hover_color
  assign button_custom = section.settings.button_custom
  assign button_font = section.settings.button_font
  assign button_height = section.settings.button_height
  assign button_align = section.settings.button_align
  assign button_align_mobile = section.settings.button_align_mobile
  assign button_url = section.settings.button_url
  assign button_mt = section.settings.button_mt
  assign button_padding_vertical = section.settings.button_padding_vertical
  assign button_padding_horizontal = section.settings.button_padding_horizontal
  assign button_radius = section.settings.button_radius
  assign button_border_thickness = section.settings.button_border_thickness
  assign button_border_color = section.settings.button_border_color
  assign button_border_hover_color = section.settings.button_border_hover_color
  assign button_bg_color = section.settings.button_bg_color
  assign button_bg_hover_color = section.settings.button_bg_hover_color

  assign arrow_size = section.settings.arrow_size
  assign arrow_icon_size = section.settings.arrow_icon_size
  assign arrow_color = section.settings.arrow_color
  assign arrow_bg_color = section.settings.arrow_bg_color
  assign arrow_border_thickness = section.settings.arrow_border_thickness
  assign arrow_border_color = section.settings.arrow_border_color

-%}

{%- style -%}
  {{ heading_font | font_face: font_display: 'swap' }}
  {{ text_font | font_face: font_display: 'swap' }}
  {{ list_item_font | font_face: font_display: 'swap' }}
  {{ bottom_text_font | font_face: font_display: 'swap' }}
  {{ button_font | font_face: font_display: 'swap' }}

  .section-{{ section.id }} {
    border-top: solid {{ border_color }} {{ border_thickness }}px;
    border-bottom: solid {{ border_color }} {{ border_thickness }}px;
    margin-top: {{ margin_top | times: 0.75 | round: 0 }}px;
    margin-bottom: {{ margin_bottom | times: 0.75 | round: 0 }}px;
  }
  .section-{{ section.id }}-settings {
    margin: 0 auto;
    padding-top: {{ padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ padding_bottom | times: 0.75 | round: 0 }}px;
    padding-left: {{ padding_horizontal_mobile }}rem;
    padding-right: {{ padding_horizontal_mobile }}rem;
  }
  .video-heading-{{ section.id }} {
    margin-top: {{ heading_mt | times: 0.75 | round: 0 }}px;
    text-align: {{ heading_align_mobile }};
  }
  .video-heading-{{ section.id }} * {
    margin: 0;
    font-size: {{ heading_size_mobile }}px;
    color: {{ heading_color }};
    line-height: {{ heading_height }}%;
    text-transform: unset;
  }
  .video-icon-{{ section.id }} {
    width: {{ icon_size_mobile }}px;
    height: {{ icon_size_mobile }}px;
  }
  .video-icon-{{ section.id }} img,
  .video-icon-{{ section.id }} svg {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: contain;
  }
  .video-text-{{ section.id }} {
    margin-top: {{ text_mt | times: 0.75 | round: 0 }}px;
    text-align: {{ text_align_mobile }};
    max-width: {{ text_width_mobile }}%;
    width: 100%;
  }
  .video-text-{{ section.id }} * {
    margin: 0;
    font-size: {{ text_size_mobile }}px;
    color: {{ text_color }};
    line-height: {{ text_height }}%;
    text-transform: unset;
  }
  .video-tabs-list-{{ section.id }} {
    margin-top: {{ list_mt | times: 0.75 | round: 0 }}px;
    display: flex;
    gap: {{ list_gap_mobile }}px;
    align-items: center;
    justify-content: center;
    position: relative;
  }
  .video-tabs-list-{{ section.id }}:after {
    content: "";
    display: block;
    height: {{ list_border_thickness }}px;
    width: 100%;
    position: absolute;
    left: 0;
    bottom: 3px;
    background: {{ list_border_color }};
  }
  .video-tab-{{ section.id }} {
    display: block;
    margin: 0px;
    min-width: {{ list_item_width_mobile }}%;
    font-size: {{ list_item_size_mobile }}px;
    line-height: {{ list_item_height }}%;
    color: {{ list_item_color }};
    text-transform: unset;
    text-align: center;
    border-bottom: {{ list_item_border_thickness }}px solid transparent;
    transition: all 0.25s ease 0s;
    cursor: pointer;
    position: relative;
    z-index: 2;
  }
  .video-tab-{{ section.id }}:hover {
    border-color: {{ list_item_border_hover_color }};
    color: {{ list_item_hover_color }};
    transition: all 0.25s ease 0s;
  }
  .video-tab-{{ section.id }}.active {
    border-color: {{ list_item_border_color }};
    color: {{ list_item_active_color }};
    transition: all 0.25s ease 0s;
  }

  /* --- Layout Rules --- */
  .video-slider-wrapper-{{ section.id }} {
    margin-top: {{ grid_mt | times: 0.75 | round: 0 }}px;
  }
  .mobile-as-list .video-slider-wrapper-{{ section.id }} {
    display: none;
  }
  .video-grid-wrapper-{{ section.id }} {
    display: none;
  }
  .mobile-as-list .video-grid-wrapper-{{ section.id }} {
    display: block;
  }
  .video-grid-{{ section.id }} {
    display: none;
    width: 100%;
    max-width: {{ grid_width_mobile }}%;
    margin-left: auto;
    margin-right: auto;
    margin-top: {{ grid_mt | times: 0.75 | round: 0 }}px;
    grid-template-columns: repeat({{ grid_row_mobile }}, 1fr);
    gap: {{ grid_gap_mobile }}px;
  }
  .video-grid-{{ section.id }}.active {
    display: grid;
  }
  .video-slider-{{ section.id }} {
    display: none !important;
  }
  .video-slider-{{ section.id }}.active {
    display: block !important;
  }
  /* --- End Layout Rules --- */

  .video-item-{{ section.id }} {
    border-radius: {{ video_radius }}px;
    border: {{ video_border_thickness }}px solid {{ video_border_color }};
  }
  .video-item-{{ section.id }} iframe,
  .video-item-{{ section.id }} video {
    display: block;
    width: 100%;
    height: 100%;
    box-shadow: none;
    border: 0px;
    object-fit: cover;
    border-radius: {{ video_radius }}px;
  }
  .video-bottom-text-{{ section.id }} {
    margin-top: {{ bottom_text_mt | times: 0.75 | round: 0 }}px;
    text-align: {{ bottom_text_align_mobile }};
    max-width: {{ bottom_text_width_mobile }}%;
    width: 100%;
  }
  .video-bottom-text-{{ section.id }} * {
    margin: 0;
    font-size: {{ bottom_text_size_mobile }}px;
    color: {{ bottom_text_color }};
    line-height: {{ bottom_text_height }}%;
    text-transform: unset;
  }
  .video-btn-{{ section.id }} {
    display: flex;
    align-items: center;
    justify-content: center;
    max-width: fit-content;
    margin: 0;
    margin-top: {{ button_mt | times: 0.75 | round: 0 }}px;
    font-size: {{ button_size_mobile }}px;
    font-weight: 700;
    color: {{ button_color }};
    line-height: {{ button_height }}%;
    text-align: center;
    text-transform: unset;
    text-decoration: none;
    padding: {{ button_padding_vertical | times: 0.75 | round: 0 }}px {{ button_padding_horizontal | times: 0.75 | round: 0 }}px;
    border-radius: {{ button_radius }}px;
    border: {{ button_border_thickness }}px solid {{ button_border_color }};
    background-color: {{ button_bg_color }};
    transition: all 0.25s ease 0s;
  }
  .video-btn-{{ section.id }}:hover {
    color: {{ button_hover_color }};
    border: {{ button_border_thickness }}px solid {{ button_border_hover_color }};
    background-color: {{ button_bg_hover_color }};
    transition: all 0.25s ease 0s;
  }
  .video-navigation-{{ section.id }} {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    margin-top: 16px;
  }
  .video-btn-prev-{{ section.id }},
  .video-btn-next-{{ section.id }} {
    width: {{ arrow_size }}px;
    height: {{ arrow_size }}px;
    border: {{ arrow_border_thickness }}px solid {{ arrow_border_color }};
    border-radius: 50%;
    background: {{ arrow_bg_color }};
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease 0s;
    cursor: pointer;
    -webkit-appearance: none;
    box-shadow: 0px 0px 10px 0px rgba(0,0,0,.15);
  }
  .video-btn-prev-{{ section.id }} svg,
  .video-btn-next-{{ section.id }} svg {
    height: {{ arrow_icon_size }}px;
    width: {{ arrow_icon_size }}px;
  }
  .video-btn-prev-{{ section.id }} svg path,
  .video-btn-next-{{ section.id }} svg path {
    fill: {{ arrow_color }};
  }
  .video-btn-next-{{ section.id }} svg {
    transform: rotate(180deg);
  }

  @media(min-width: 1024px) {
    .section-{{ section.id }} {
      margin-top: {{ margin_top }}px;
      margin-bottom: {{ margin_bottom }}px;
    }
    .section-{{ section.id }}-settings {
      padding: 0 5rem;
      padding-top: {{ padding_top }}px;
      padding-bottom: {{ padding_bottom }}px;
      padding-left: {{ padding_horizontal }}rem;
      padding-right: {{ padding_horizontal }}rem;
    }
    .video-icon-{{ section.id }} {
      width: {{ icon_size }}px;
      height: {{ icon_size }}px;
    }
    .video-heading-{{ section.id }} {
      margin-top: {{ heading_mt }}px;
      text-align: {{ heading_align }};
    }
    .video-heading-{{ section.id }} * {
      font-size: {{ heading_size }}px;
    }
    .video-text-{{ section.id }} {
      margin-top: {{ text_mt }}px;
      text-align: {{ text_align }};
      max-width: {{ text_width }}%;
    }
    .video-text-{{ section.id }} * {
      font-size: {{ text_size }}px;
    }
    .video-tabs-list-{{ section.id }} {
      margin-top: {{ list_mt }}px;
      gap: {{ list_gap }}px;
    }
    .video-tab-{{ section.id }} {
      min-width: {{ list_item_width }}%;
      font-size: {{ list_item_size }}px;
    }

    /* --- Layout Rules - Desktop --- */
    .video-slider-wrapper-{{ section.id }} {
      display: none;
    }
    .video-grid-wrapper-{{ section.id }} {
      display: block;
    }
    /* --- End Layout Rules - Desktop --- */

    .video-grid-{{ section.id }} {
      max-width: {{ grid_width }}%;
      margin-top: {{ grid_mt }}px;
      grid-template-columns: repeat({{ grid_row }}, 1fr);
      gap: {{ grid_gap}}px;
    }
    .video-bottom-text-{{ section.id }} {
      margin-top: {{ bottom_text_mt }}px;
      text-align: {{ bottom_text_align }};
      max-width: {{ bottom_text_width }}%;
    }
    .video-bottom-text-{{ section.id }} * {
      font-size: {{ bottom_text_size }}px;
    }
    .video-btn-{{ section.id }} {
      margin-top: {{ button_mt }}px;
      padding: {{ button_padding_vertical }}px {{ button_padding_horizontal }}px;
      font-size: {{ button_size }}px;
    }
  }
{%- endstyle -%}

{% unless full_width %}
  <style>
    .section-{{ section.id }}-settings {
      max-width: {{ content_width }}rem;
    }
  </style>
{% endunless %}

{% if heading_custom %}
  <style>
    .video-heading-{{ section.id }} * {
      font-family: {{ heading_font.family }}, {{ heading_font.fallback_families }};
      font-weight: {{ heading_font.weight }};
      font-style: {{ heading_font.style }};
    }
  </style>
{% endif %}

{% if text_custom %}
  <style>
    .video-text-{{ section.id }} * {
      font-family: {{ text_font.family }}, {{ text_font.fallback_families }};
      font-weight: {{ text_font.weight }};
      font-style: {{ text_font.style }};
    }
  </style>
{% endif %}

{% if list_item_custom %}
  <style>
    .video-tab-{{ section.id }} {
      font-family: {{ list_item_font.family }}, {{ list_item_font.fallback_families }};
      font-weight: {{ list_item_font.weight }};
      font-style: {{ list_item_font.style }};
    }
  </style>
{% endif %}

{% if bottom_text_custom %}
  <style>
    .video-bottom-text-{{ section.id }} * {
      font-family: {{ bottom_text_font.family }}, {{ bottom_text_font.fallback_families }};
      font-weight: {{ bottom_text_font.weight }};
      font-style: {{ bottom_text_font.style }};
    }
  </style>
{% endif %}

{% if button_custom %}
  <style>
    .video-btn-{{ section.id }} {
      font-family: {{ button_font.family }}, {{ button_font.fallback_families }};
      font-weight: {{ button_font.weight }};
      font-style: {{ button_font.style }};
    }
  </style>
{% endif %}

{% if icon_align_mobile == "center" %}
  <style>
   .video-icon-{{ section.id }} {
      margin-left: auto;
      margin-right: auto;
    }
  </style>
{% elsif icon_align_mobile == "right" %}
  <style>
   .video-icon-{{ section.id }} {
      margin-left: auto;
    }
  </style>
{% endif %}

{% if icon_align == "center" %}
  <style>
    @media(min-width: 1024px) {
     .video-icon-{{ section.id }} {
        margin-left: auto;
        margin-right: auto;
      }
    }
  </style>
{% elsif icon_align == "right" %}
  <style>
    @media(min-width: 1024px) {
     .video-icon-{{ section.id }} {
        margin-left: auto;
      }
    }
  </style>
{% else %}
  <style>
    @media(min-width: 1024px) {
     .video-icon-{{ section.id }} {
        margin-left: 0px;
        margin-right: 0px;
      }
    }
  </style>
{% endif %}

{% if text_align_mobile == "center" %}
  <style>
   .video-text-{{ section.id }} {
      margin-left: auto;
      margin-right: auto;
    }
  </style>
{% elsif text_align_mobile == "right" %}
  <style>
   .video-text-{{ section.id }} {
      margin-left: auto;
    }
  </style>
{% endif %}

{% if text_align == "center" %}
  <style>
    @media(min-width: 1024px) {
     .video-text-{{ section.id }} {
        margin-left: auto;
        margin-right: auto;
      }
    }
  </style>
{% elsif text_align == "right" %}
  <style>
    @media(min-width: 1024px) {
     .video-text-{{ section.id }} {
        margin-left: auto;
      }
    }
  </style>
{% else %}
  <style>
    @media(min-width: 1024px) {
     .video-text-{{ section.id }} {
        margin-left: 0px;
        margin-right: 0px;
      }
    }
  </style>
{% endif %}

{% if bottom_text_align_mobile == "center" %}
  <style>
   .video-bottom-text-{{ section.id }} {
      margin-left: auto;
      margin-right: auto;
    }
  </style>
{% elsif bottom_text_align_mobile == "right" %}
  <style>
   .video-bottom-text-{{ section.id }} {
      margin-left: auto;
    }
  </style>
{% endif %}

{% if bottom_text_align == "center" %}
  <style>
    @media(min-width: 1024px) {
     .video-bottom-text-{{ section.id }} {
        margin-left: auto;
        margin-right: auto;
      }
    }
  </style>
{% elsif bottom_text_align == "right" %}
  <style>
    @media(min-width: 1024px) {
     .video-bottom-text-{{ section.id }} {
        margin-left: auto;
      }
    }
  </style>
{% else %}
  <style>
    @media(min-width: 1024px) {
     .video-bottom-text-{{ section.id }} {
        margin-left: 0px;
        margin-right: 0px;
      }
    }
  </style>
{% endif %}

{% if button_align_mobile == "center" %}
  <style>
   .video-btn-{{ section.id }} {
      margin-left: auto;
      margin-right: auto;
    }
  </style>
{% elsif button_align_mobile == "right" %}
  <style>
   .video-btn-{{ section.id }} {
      margin-left: auto;
    }
  </style>
{% endif %}

{% if button_align == "center" %}
  <style>
    @media(min-width: 1024px) {
     .video-btn-{{ section.id }} {
        margin-left: auto;
        margin-right: auto;
      }
    }
  </style>
{% elsif button_align == "right" %}
  <style>
    @media(min-width: 1024px) {
     .video-btn-{{ section.id }} {
        margin-left: auto;
      }
    }
  </style>
{% else %}
  <style>
    @media(min-width: 1024px) {
     .video-btn-{{ section.id }} {
        margin-left: 0px;
        margin-right: 0px;
      }
    }
  </style>
{% endif %}

{% if video_ratio == "portrait" %}
  <style>
    .video-item-{{ section.id }} {
      aspect-ratio: 9.6/12;
    }
  </style>
{% elsif video_ratio == "landscape" %}
  <style>
    .video-item-{{ section.id }} {
      aspect-ratio: 12/7;
    }
  </style>
{% elsif video_ratio == "square" %}
  <style>
    .video-item-{{ section.id }} {
      aspect-ratio: 12/12;
    }
  </style>
{% endif %}

{% if video_shadow %}
  <style>
    .video-item-{{ section.id }} {
      box-shadow: 0px 4px 5px {{ video_shadow_color | hex_to_rgba: 0.3 }};
    }
  </style>
{% endif %}

<div class="section-{{ section.id }} video-{{ section.id }} {% if section.settings.mobile_layout_list %}mobile-as-list{% endif %}" style="background-color:{{ background_color }}; background-image: {{ background_gradient }};">
  <div class="section-{{ section.id }}-settings">
    {% unless hide_icon %}
      <div class="video-icon-{{ section.id }}">
        {%- if section.settings.icon_lottie_url != blank -%}
          <lord-icon
            src="{{ section.settings.icon_lottie_url }}"
            trigger="loop"
            class="video-lottie-icon"
            style="width:{{ icon_size }}px;height:{{ icon_size }}px">
          </lord-icon>
        {%- elsif icon != blank -%}
          <img src="{{ icon | image_url }}" alt="{{ icon.alt }}" {% if lazy %}loading="lazy"{% endif %}>
        {%- else -%}
          <svg xmlns="http://www.w3.org/2000/svg" width="50" height="34.945" viewBox="0 0 50 34.945"><path d="M48.963,10.82a6.268,6.268,0,0,0-4.352-4.352c-3.9-1.045-19.582-1.045-19.582-1.045S9.383,5.4,5.447,6.469A6.268,6.268,0,0,0,1.1,10.82a65.121,65.121,0,0,0-1.088,12.1A65.121,65.121,0,0,0,1.1,34.971a6.268,6.268,0,0,0,4.352,4.352c3.893,1.046,19.582,1.046,19.582,1.046s15.643,0,19.582-1.046a6.268,6.268,0,0,0,4.352-4.352A65.12,65.12,0,0,0,50,22.918a65.12,65.12,0,0,0-1.042-12.1ZM20.023,30.4V15.411l13.055,7.507Z" transform="translate(-0.007 -5.424)" fill="#ea0029"/></svg>
        {%- endif -%}
      </div>
    {% endunless %}
    {% if heading != blank %}
      <div class="video-heading-{{ section.id }}">{{ heading }}</div>
    {% endif %}
    {% if text != blank %}
      <div class="video-text-{{ section.id }}">{{ text }}</div>
    {% endif %}
    <div class="video-tabs-{{ section.id }}">

      <div class="video-tabs-list-{{ section.id }}">
        {% for block in section.blocks %}
          {% if block.type == "tab" %}
            <label class="video-tab-{{ section.id }} {% if forloop.first %}active{% endif %}" data-id="{{ block.settings.title }}">{{ block.settings.title }}</label>
          {% endif %}
        {% endfor %}
      </div>
      
      <div class="video-slider-wrapper-{{ section.id }}">
        {% assign inside_item_mobile = false %}
        {% for block in section.blocks %}
          {% if block.type == "tab" %}
            {% if inside_item_mobile %}
                  </div>
                  <div class="video-navigation-{{ section.id }}">
                    <div class="video-btn-prev-{{ section.id }}">
                      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><title>Artboard-66</title><g id="Left"><path d="M14,17a1,1,0,0,1-.707-.293l-4-4a1,1,0,0,1,0-1.414l4-4a1,1,0,1,1,1.414,1.414L11.414,12l3.293,3.293A1,1,0,0,1,14,17Z"/></g></svg>
                    </div>
                    <div class="video-btn-next-{{ section.id }}">
                      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><title>Artboard-66</title><g id="Left"><path d="M14,17a1,1,0,0,1-.707-.293l-4-4a1,1,0,0,1,0-1.414l4-4a1,1,0,1,1,1.414,1.414L11.414,12l3.293,3.293A1,1,0,0,1,14,17Z"/></g></svg>
                    </div>
                  </div>
                </div>
            {% endif %}
                <div class="video-slider-{{ section.id }} video-slider-{{ block.id }} {% if forloop.first %}active{% endif %} swiper" data-id="{{ block.settings.title }}">
                  <div class="swiper-wrapper">
                  {% assign inside_item_mobile = true %}
          {% elsif block.type == "video" %}
                    <div class="video-item-{{ section.id }} swiper-slide">
                      {% assign video_id =  block.settings.video.id | default: block.settings.video_url.id %}
                      {% assign loop = '&loop=1&playlist=' | append: video_id %}
                      {%- if block.settings.video == null and block.settings.video_url != null -%}
                        {%- if block.settings.video_url.type == 'youtube' -%}
                        <iframe
                          data-src="https://www.youtube.com/embed/{{ video_id }}?enablejsapi=1{% if autoplay_videos %}&autoplay=1{% endif %}{{ loop }}"
                          class="lazy"
                          loading="lazy"
                          allow="accelerometer; {% if autoplay_videos %}autoplay; {% endif %}encrypted-media; gyroscope; picture-in-picture"
                          allowfullscreen
                          title="Fixed Video"
                        ></iframe>
                        {%- else -%}
                        <iframe
                          data-src="https://player.vimeo.com/video/{{ video_id }}?enablejsapi=1{% if autoplay_videos %}&autoplay=1{% endif %}{{ loop }}"
                          class="lazy"
                          loading="lazy"
                          allow="accelerometer; {% if autoplay_videos %}autoplay; {% endif %}encrypted-media; gyroscope; picture-in-picture"
                          allowfullscreen
                          title="Fixed Video"
                        ></iframe>
                        {% endif %}
                      {% else %}
<video data-src="{{ block.settings.video.sources.first.url }}" {% if autoplay_videos %}muted{% endif %} playsinline {% if autoplay_videos %}autoplay{% endif %} preload="none" loop class="lazy" controls></video>                      {% endif %}
                    </div>
          {% endif %}
        {% endfor %}
        {% if inside_item_mobile %}
                  </div>
                  <div class="video-navigation-{{ section.id }}">
                    <div class="video-btn-prev-{{ section.id }}">
                      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><title>Artboard-66</title><g id="Left"><path d="M14,17a1,1,0,0,1-.707-.293l-4-4a1,1,0,0,1,0-1.414l4-4a1,1,0,1,1,1.414,1.414L11.414,12l3.293,3.293A1,1,0,0,1,14,17Z"/></g></svg>
                    </div>
                    <div class="video-btn-next-{{ section.id }}">
                      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><title>Artboard-66</title><g id="Left"><path d="M14,17a1,1,0,0,1-.707-.293l-4-4a1,1,0,0,1,0-1.414l4-4a1,1,0,1,1,1.414,1.414L11.414,12l3.293,3.293A1,1,0,0,1,14,17Z"/></g></svg>
                    </div>
                  </div>
                </div>
        {% endif %}
      </div>

      <div class="video-grid-wrapper-{{ section.id }}">
        {% assign inside_item = false %}
        {% for block in section.blocks %}
          {% if block.type == "tab" %}
            {% if inside_item %}
              </div>
            {% endif %}
            <div class="video-grid-{{ section.id }} {% if forloop.first %}active{% endif %}" data-id="{{ block.settings.title }}">
            {% assign inside_item = true %}
          {% elsif block.type == "video" %}
            <div class="video-item-{{ section.id }}">
              {% assign video_id =  block.settings.video.id | default: block.settings.video_url.id %}
              {% assign loop = '&loop=1&playlist=' | append: video_id %}
              {%- if block.settings.video == null and block.settings.video_url != null -%}
                {%- if block.settings.video_url.type == 'youtube' -%}
                  <iframe
                    data-src="https://www.youtube.com/embed/{{ video_id }}?enablejsapi=1{% if autoplay_videos %}&autoplay=1{% endif %}{{ loop }}"
                    class="lazy"
                    loading="lazy"
                    allow="accelerometer; {% if autoplay_videos %}autoplay; {% endif %}encrypted-media; gyroscope; picture-in-picture"
                    allowfullscreen
                    title="Fixed Video"
                  ></iframe>
                {%- else -%}
                  <iframe
                    data-src="https://player.vimeo.com/video/{{ video_id }}?enablejsapi=1{% if autoplay_videos %}&autoplay=1{% endif %}{{ loop }}"
                    class="lazy"
                    loading="lazy"
                    allow="accelerometer; {% if autoplay_videos %}autoplay; {% endif %}encrypted-media; gyroscope; picture-in-picture"
                    allowfullscreen
                    title="Fixed Video"
                  ></iframe>
                {% endif %}
              {% else %}
<video data-src="{{ block.settings.video.sources.first.url }}" {% if autoplay_videos %}muted{% endif %} playsinline {% if autoplay_videos %}autoplay{% endif %} preload="none" loop class="lazy" controls></video>              {% endif %}
            </div>
          {% endif %}
        {% endfor %}
        {% if inside_item %}
          </div>
        {% endif %}
      </div>

    </div>
    {% if bottom_text != blank %}
      <div class="video-bottom-text-{{ section.id }}">{{ bottom_text }}</div>
    {% endif %}
    {% if button != blank %}
      <a href="{{ button_url }}" class="video-btn-{{ section.id }}">{{ button }}</a>
    {% endif %}
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/swiper@8.4.7/swiper-bundle.min.js"></script>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const section = document.querySelector('.video-{{ section.id }}');
    if (!section) return;

    // Configuration from Shopify settings
    const mobileAsList = {{ section.settings.mobile_layout_list | json }};
    const isDesktop = () => window.innerWidth > 1023;
    
    // Element selectors
    const sliderWrapper = section.querySelector('.video-slider-wrapper-{{ section.id }}');
    const gridWrapper = section.querySelector('.video-grid-wrapper-{{ section.id }}');
    const tabs = section.querySelectorAll('.video-tab-{{ section.id }}');
    const grids = section.querySelectorAll('.video-grid-{{ section.id }}');
    const sliders = section.querySelectorAll('.video-slider-{{ section.id }}');
    const navigations = section.querySelectorAll('.video-navigation-{{ section.id }}');

    // Initialize Swiper sliders
    sliders.forEach(sliderEl => {
      const navigationEl = sliderEl.querySelector('.video-navigation-{{ section.id }}');
      new Swiper(sliderEl, {
        speed: 300,
        loop: true,
        spaceBetween: {{ grid_gap_mobile }},
        slidesPerView: {{ grid_row_mobile }},
        navigation: {
          nextEl: navigationEl ? navigationEl.querySelector('.video-btn-next-{{ section.id }}') : null,
          prevEl: navigationEl ? navigationEl.querySelector('.video-btn-prev-{{ section.id }}') : null,
        },
        on: {
          slideChange: function () {
            const videos = this.el.querySelectorAll('video, iframe');
            videos.forEach(video => {
              if (video.tagName === 'VIDEO' && !video.paused) {
                video.pause();
              } else if (video.tagName === 'IFRAME' && video.src) {
                video.src = video.src; // Resets the iframe to stop video
              }
            });
          }
        }
      });
    });

    const loadVideosInContainer = (container) => {
      if (!container) return;
      const lazyElements = container.querySelectorAll('[data-src]');
      lazyElements.forEach(element => {
        if (!element.src) {
          element.src = element.dataset.src;
        }
      });
    };

    const updateView = (activeTabId) => {
      // Determine which view to show
      if (isDesktop() || mobileAsList) {
        // --- GRID VIEW ---
        sliderWrapper.style.display = 'none';
        gridWrapper.style.display = 'block';

        // Activate the correct grid
        grids.forEach(grid => {
          if (grid.dataset.id === activeTabId) {
            grid.classList.add('active');
            loadVideosInContainer(grid);
          } else {
            grid.classList.remove('active');
          }
        });
      } else {
        // --- SLIDER VIEW ---
        gridWrapper.style.display = 'none';
        sliderWrapper.style.display = 'block';
        
        // Activate the correct slider
        sliders.forEach(slider => {
          if (slider.dataset.id === activeTabId) {
            slider.classList.add('active');
            loadVideosInContainer(slider);
          } else {
            slider.classList.remove('active');
          }
        });
      }
    };
    
    // Add click listeners to tabs
    tabs.forEach(tab => {
      tab.addEventListener('click', (e) => {
        const activeTabId = e.currentTarget.dataset.id;
        
        // Update active class on tabs
        tabs.forEach(t => t.classList.remove('active'));
        e.currentTarget.classList.add('active');

        // Update the view
        updateView(activeTabId);
      });
    });

    // Initial view setup
    const initialActiveTab = section.querySelector('.video-tab-{{ section.id }}.active');
    if (initialActiveTab) {
      updateView(initialActiveTab.dataset.id);
    }
  });
</script>
{% schema %}
  {
    "name": "SC-VideoGridTabs",
    "settings": [
      {
        "type": "header",
        "content": "Icon"
      },
{
  "type": "url",
  "id": "icon_lottie_url",
  "label": "Lottie Icon URL",
  "info": "Paste the Lottie JSON file URL here. If provided, this Lottie animation will be used instead of the image."
},
{
  "type": "image_picker",
  "id": "icon",
  "label": "Icon image"
},
      {
        "type": "range",
        "id": "icon_size",
        "min": 10,
        "max": 200,
        "step": 2,
        "unit": "px",
        "label": "Icon Size",
        "default": 50
      },
      {
        "type": "range",
        "id": "icon_size_mobile",
        "min": 10,
        "max": 200,
        "step": 2,
        "unit": "px",
        "label": "Icon Size - Mobile",
        "default": 50
      },
      {
        "type": "select",
        "id": "icon_align",
        "label": "Icon Align",
        "default": "center",
        "options": [
          {
            "label": "Left",
            "value": "left"
          },
          {
            "label": "Center",
            "value": "center"
          },
          {
            "label": "Right",
            "value": "right"
          }
        ]
      },
      {
        "type": "select",
        "id": "icon_align_mobile",
        "label": "Icon Align - Mobile",
        "default": "center",
        "options": [
          {
            "label": "Left",
            "value": "left"
          },
          {
            "label": "Center",
            "value": "center"
          },
          {
            "label": "Right",
            "value": "right"
          }
        ]
      },
      {
        "type": "checkbox",
        "id": "hide_icon",
        "label": "Hide Icon"
      },
      {
        "type": "header",
        "content": "Heading"
      },
      {
        "type": "richtext",
        "id": "heading",
        "label": "Heading",
        "default": "<h2>Section Store Education Channel</h2>"
      },
      {
        "type": "checkbox",
        "id": "heading_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "heading_font",
        "label": "Heading Font Family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "heading_size",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Heading Size",
        "default": 48
      },
      {
        "type": "range",
        "id": "heading_size_mobile",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Heading Size - Mobile",
        "default": 32
      },
      {
        "type": "range",
        "id": "heading_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Heading Line Height",
        "default": 150
      },
      {
        "type": "select",
        "id": "heading_align",
        "label": "Heading Text Align",
        "default": "center",
        "options": [
          {
            "label": "Left",
            "value": "left"
          },
          {
            "label": "Center",
            "value": "center"
          },
          {
            "label": "Right",
            "value": "right"
          }
        ]
      },
      {
        "type": "select",
        "id": "heading_align_mobile",
        "label": "Heading Text Align - Mobile",
        "default": "center",
        "options": [
          {
            "label": "Left",
            "value": "left"
          },
          {
            "label": "Center",
            "value": "center"
          },
          {
            "label": "Right",
            "value": "right"
          }
        ]
      },
      {
        "type": "range",
        "id": "heading_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Heading Margin Top",
        "default": 16
      },
      {
        "type": "header",
        "content": "Text"
      },
      {
        "type": "richtext",
        "id": "text",
        "label": "Text",
        "default": "<p>We built our YouTube channel around the idea that to help our customers have the best Section Store experience, we help you design your Shopify just how you want it without the need of developers or third-party page builders.</p>"
      },
      {
        "type": "range",
        "id": "text_width",
        "min": 10,
        "max": 100,
        "step": 2,
        "unit": "%",
        "label": "Text Width",
        "default": 72
      },
      {
        "type": "range",
        "id": "text_width_mobile",
        "min": 10,
        "max": 100,
        "step": 2,
        "unit": "%",
        "label": "Text Width - Mobile",
        "default": 100
      },
      {
        "type": "checkbox",
        "id": "text_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "text_font",
        "label": "Text Font Family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "text_size",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Text Size",
        "default": 20
      },
      {
        "type": "range",
        "id": "text_size_mobile",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Text Size - Mobile",
        "default": 16
      },
      {
        "type": "range",
        "id": "text_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Text Line Height",
        "default": 150
      },
      {
        "type": "select",
        "id": "text_align",
        "label": "Text Align",
        "default": "center",
        "options": [
          {
            "label": "Left",
            "value": "left"
          },
          {
            "label": "Center",
            "value": "center"
          },
          {
            "label": "Right",
            "value": "right"
          }
        ]
      },
      {
        "type": "select",
        "id": "text_align_mobile",
        "label": "Text Align - Mobile",
        "default": "center",
        "options": [
          {
            "label": "Left",
            "value": "left"
          },
          {
            "label": "Center",
            "value": "center"
          },
          {
            "label": "Right",
            "value": "right"
          }
        ]
      },
      {
        "type": "range",
        "id": "text_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Text Margin Top",
        "default": 16
      },
      {
        "type": "header",
        "content": "Tabs List Settings"
      },
      {
        "type": "range",
        "id": "list_gap",
        "min": 0,
        "max": 50,
        "step": 2,
        "unit": "px",
        "label": "Tabs List Gap",
        "default": 16
      },
      {
        "type": "range",
        "id": "list_gap_mobile",
        "min": 0,
        "max": 50,
        "step": 2,
        "unit": "px",
        "label": "Tabs List Gap - Mobile",
        "default": 16
      },
      {
        "type": "range",
        "id": "list_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Tabs List Margin Top",
        "default": 16
      },
      {
        "type": "range",
        "id": "list_border_thickness",
        "min": 0,
        "max": 10,
        "step": 1,
        "unit": "px",
        "label": "Tabs List Border Thickness",
        "default": 1
      },
      {
        "type": "header",
        "content": "Tabs List Item Settings"
      },
      {
        "type": "range",
        "id": "list_item_width",
        "min": 2,
        "max": 50,
        "step": 1,
        "unit": "%",
        "label": "List Item Width",
        "default": 10
      },
      {
        "type": "range",
        "id": "list_item_width_mobile",
        "min": 2,
        "max": 50,
        "step": 1,
        "unit": "%",
        "label": "List Item Width - Mobile",
        "default": 10
      },
      {
        "type": "checkbox",
        "id": "list_item_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "list_item_font",
        "label": "List Item Font Family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "list_item_size",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "List Item Size",
        "default": 20
      },
      {
        "type": "range",
        "id": "list_item_size_mobile",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "List Item Size - Mobile",
        "default": 16
      },
      {
        "type": "range",
        "id": "list_item_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "List Item Line Height",
        "default": 150
      },
      {
        "type": "range",
        "id": "list_item_border_thickness",
        "min": 0,
        "max": 10,
        "step": 1,
        "unit": "px",
        "label": "List Item Border Thickness",
        "default": 6
      },
      {
        "type": "header",
        "content": "Grid Settings"
      },
      {
        "type": "header",
        "content": "Mobile Layout"
      },
      {
        "type": "checkbox",
        "id": "mobile_layout_list",
        "label": "Show videos as a list on mobile",
        "info": "When checked, videos will appear in a vertical list on mobile instead of a slideshow.",
        "default": false
      },
      {
        "type": "range",
        "id": "grid_width",
        "min": 10,
        "max": 100,
        "step": 1,
        "unit": "%",
        "label": "Grid Width",
        "default": 85
      },
      {
        "type": "range",
        "id": "grid_width_mobile",
        "min": 10,
        "max": 100,
        "step": 1,
        "unit": "%",
        "label": "Grid Width - Mobile",
        "default": 100
      },
      {
        "type": "range",
        "id": "grid_row",
        "min": 1,
        "max": 4,
        "step": 1,
        "label": "Items per Row",
        "default": 3
      },
      {
        "type": "range",
        "id": "grid_row_mobile",
        "min": 1,
        "max": 3,
        "step": 1,
        "label": "Items per Row - Mobile",
        "default": 1
      },
      {
        "type": "range",
        "id": "grid_gap",
        "min": 0,
        "max": 100,
        "step": 1,
        "unit": "px",
        "label": "Grid Gap",
        "default": 32
      },
      {
        "type": "range",
        "id": "grid_gap_mobile",
        "min": 0,
        "max": 100,
        "step": 1,
        "unit": "px",
        "label": "Grid Gap - Mobile",
        "default": 16
      },
      {
        "type": "range",
        "id": "grid_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Grid Margin Top",
        "default": 16
      },
      {
        "type": "header",
        "content": "Video Settings"
      },
      {
        "type": "checkbox",
        "id": "autoplay_videos",
        "label": "Autoplay videos",
        "default": true
      },
      {
        "type": "select",
        "id": "video_ratio",
        "label": "Video Aspect Ratio",
        "default": "landscape",
        "options": [
          {
            "label": "Original",
            "value": "original"
          },
          {
            "label": "Portrait",
            "value": "portrait"
          },
          {
            "label": "Square",
            "value": "square"
          },
          {
            "label": "Landscape",
            "value": "landscape"
          }
        ]
      },
      {
        "type": "range",
        "id": "video_radius",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Video Radius",
        "default": 0
      },
      {
        "type": "range",
        "id": "video_border_thickness",
        "min": 0,
        "max": 10,
        "step": 1,
        "unit": "px",
        "label": "Video Border Thickness",
        "default": 0
      },
      {
        "type": "checkbox",
        "label": "Use Video Shadow",
        "id": "video_shadow",
        "default": false
      },
      {
        "type": "header",
        "content": "Arrow Settings"
      },
      {
        "type": "range",
        "id": "arrow_size",
        "min": 10,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Arrow Size",
        "default": 50
      },
      {
        "type": "range",
        "id": "arrow_icon_size",
        "min": 10,
        "max": 50,
        "step": 2,
        "unit": "px",
        "label": "Arrow Icon Size",
        "default": 28
      },
      {
        "type": "range",
        "id": "arrow_border_thickness",
        "min": 0,
        "max": 10,
        "step": 1,
        "unit": "px",
        "label": "Arrow Border Thickness",
        "default": 0
      },
      {
        "type": "header",
        "content": "Bottom Text"
      },
      {
        "type": "richtext",
        "id": "bottom_text",
        "label": "Bottom Text",
        "default": "<p>We release at least one video every week, focusing on teaching Shopify shop owners how to design their website just how they want it.</p>"
      },
      {
        "type": "range",
        "id": "bottom_text_width",
        "min": 10,
        "max": 100,
        "step": 2,
        "unit": "%",
        "label": "Bottom Text Width",
        "default": 72
      },
      {
        "type": "range",
        "id": "bottom_text_width_mobile",
        "min": 10,
        "max": 100,
        "step": 2,
        "unit": "%",
        "label": "Bottom Text Width - Mobile",
        "default": 100
      },
      {
        "type": "checkbox",
        "id": "bottom_text_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "bottom_text_font",
        "label": "Bottom Text Font Family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "bottom_text_size",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Bottom Text Size",
        "default": 20
      },
      {
        "type": "range",
        "id": "bottom_text_size_mobile",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Bottom Text Size - Mobile",
        "default": 16
      },
      {
        "type": "range",
        "id": "bottom_text_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Bottom Text Line Height",
        "default": 150
      },
      {
        "type": "select",
        "id": "bottom_text_align",
        "label": "Bottom Text Align",
        "default": "center",
        "options": [
          {
            "label": "Left",
            "value": "left"
          },
          {
            "label": "Center",
            "value": "center"
          },
          {
            "label": "Right",
            "value": "right"
          }
        ]
      },
      {
        "type": "select",
        "id": "bottom_text_align_mobile",
        "label": "Bottom Text Align - Mobile",
        "default": "center",
        "options": [
          {
            "label": "Left",
            "value": "left"
          },
          {
            "label": "Center",
            "value": "center"
          },
          {
            "label": "Right",
            "value": "right"
          }
        ]
      },
      {
        "type": "range",
        "id": "bottom_text_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Bottom Text Margin Top",
        "default": 16
      },
      {
        "type": "header",
        "content": "Button"
      },
      {
        "type": "text",
        "id": "button",
        "label": "Button",
        "default": "Subscribe"
      },
      {
        "type": "url",
        "id": "button_url",
        "label": "Button URL"
      },
      {
        "type": "checkbox",
        "id": "button_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "button_font",
        "label": "Button Font Family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "button_size",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Button Size",
        "default": 16
      },
      {
        "type": "range",
        "id": "button_size_mobile",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Button Size - Mobile",
        "default": 14
      },
      {
        "type": "range",
        "id": "button_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Button Line Height",
        "default": 100
      },
      {
        "type": "text_alignment",
        "id": "button_align",
        "label": "Button Text Align",
        "default": "center"
      },
      {
        "type": "text_alignment",
        "id": "button_align_mobile",
        "label": "Button Text Align - Mobile",
        "default": "center"
      },
      {
        "type": "range",
        "id": "button_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Button Margin Top",
        "default": 32
      },
      {
        "type": "range",
        "id": "button_padding_vertical",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Button Padding Vertical",
        "default": 16
      },
      {
       "type": "range",
       "id": "button_padding_horizontal",
       "min": 0,
       "max": 100,
       "step": 2,
       "unit": "px",
       "label": "Button Padding Horizontal",
       "default": 60
      },
      {
       "type": "range",
       "id": "button_radius",
       "min": 0,
       "max": 100,
       "step": 2,
       "unit": "px",
       "label": "Button Roundness",
       "default": 50
      },
      {
       "type": "range",
       "id": "button_border_thickness",
       "min": 0,
       "max": 10,
       "step": 1,
       "unit": "px",
       "label": "Button Border Thickness",
       "default": 0
      },
      {
        "type": "header",
        "content": "List Colors"
      },
      {
        "type": "color",
        "label": "Tabs List Border Color",
        "id": "list_border_color",
        "default": "#404040"
      },
      {
        "type": "color",
        "label": "List Item Color",
        "id": "list_item_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "List Item Hover Color",
        "id": "list_item_hover_color",
        "default": "#ea0029"
      },
      {
        "type": "color",
        "label": "List Item Active Color",
        "id": "list_item_active_color",
        "default": "#ea0029"
      },
      {
        "type": "color",
        "label": "List Item Border Hover Color",
        "id": "list_item_border_hover_color",
        "default": "#ea0029"
      },
      {
        "type": "color",
        "label": "List Item Active Border Color",
        "id": "list_item_border_color",
        "default": "#ea0029"
      },
      {
        "type": "color",
        "label": "List Item Active Border Color",
        "id": "list_item_border_active_color",
        "default": "#ea0029"
      },
      {
        "type": "header",
        "content": "Video Colors"
      },
      {
        "type": "color",
        "label": "Video Border Color",
        "id": "video_border_color",
        "default": "#ea0029"
      },
      {
        "type": "color",
        "label": "Video Shadow Color",
        "id": "video_border_shadow_color",
        "default": "#ea0029"
      },
      {
        "type": "header",
        "content": "Button Colors"
      },
      {
        "type": "color",
        "label": "Button Text Color",
        "id": "button_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Button Hover Text Color",
        "id": "button_hover_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Button Background Color",
        "id": "button_bg_color",
        "default": "#006CFF"
      },
      {
        "type": "color",
        "label": "Button Background Hover Color",
        "id": "button_bg_hover_color",
        "default": "#006CFF"
      },
      {
        "type": "color",
        "label": "Button Border Color",
        "id": "button_border_color",
        "default": "#000000"
      },
      {
        "type": "color",
        "label": "Button Border Hover Color",
        "id": "button_border_hover_color",
        "default": "#000000"
      },
      {
        "type": "header",
        "content": "Navigation Colors"
      },
      {
        "type": "color",
        "label": "Arrow color",
        "id": "arrow_color",
        "default": "#000000"
      },
      {
        "type": "color",
        "label": "Arrow Background color",
        "id": "arrow_bg_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Arrow Border color",
        "id": "arrow_border_color",
        "default": "#000000"
      },
      {
        "type": "header",
        "content": "Section Colors"
      },
      {
        "type": "color",
        "label": "Heading Color",
        "id": "heading_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Text Color",
        "id": "text_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Bottom Text Color",
        "id": "bottom_text_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Section background",
        "id": "background_color",
        "default": "#000000"
      },
      {
        "type": "color_background",
        "id": "background_gradient",
        "label": "Section background gradient"
      },
      {
        "type": "color",
        "label": "Border",
        "id": "border_color",
        "default": "#000000"
      },
      {
        "type": "header",
        "content": "Section margin (outside)"
      },
      {
        "type": "range",
        "id": "margin_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Margin top",
        "default": 0
      },
      {
        "type": "range",
        "id": "margin_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Margin bottom",
        "default": 0
      },
      {
        "type": "header",
        "content": "Section padding (inside)"
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Padding top",
        "default": 36
      },
      {
         "type": "range",
         "id": "padding_bottom",
         "min": 0,
         "max": 100,
         "step": 4,
         "unit": "px",
         "label": "Padding bottom",
         "default": 36
      },
      {
        "type": "range",
        "id": "padding_horizontal",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "rem",
        "label": "Padding sides",
        "default": 5
      },
      {
        "type": "range",
        "id": "padding_horizontal_mobile",
        "min": 0,
        "max": 15,
        "step": 0.5,
        "unit": "rem",
        "label": "Padding sides mobile",
        "default": 1.5
      },
      {
        "type": "header",
        "content": "Section Settings"
      },
      {
        "type": "checkbox",
        "id": "full_width",
        "label": "Full Width",
        "default": false
      },
      {
        "type": "range",
        "id": "content_width",
        "min": 0,
        "max": 400,
        "step": 10,
        "unit": "rem",
        "label": "Section content width",
        "default": 120
      },
      {
        "type": "range",
        "id": "border_thickness",
        "min": 0,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Border thickness",
        "default": 0
      },
      {
        "type": "checkbox",
        "id": "lazy",
        "label": "Lazy load",
        "info": "Lazy load images for speed optimisation",
        "default": true
      }
    ],
    "blocks": [
      {
        "type": "tab",
        "name": "Tab",
        "settings": [
          {
            "type": "text",
            "id": "title",
            "label": "Title",
            "info": "Must be different from each other",
            "default": "Tab"
          }
        ]
      },
      {
        "type": "video",
        "name": "Video",
        "settings": [
          {
            "type": "video",
            "id": "video",
            "label": "Video from Shopify"
          },
          {
            "type": "video_url",
            "id": "video_url",
            "label": "Video Embed from Url",
            "accept": ["youtube", "vimeo"],
            "default": "https://www.youtube.com/watch?v=_9VUPq3SxOc",
            "info": "Shows when no Shopify-hosted video is selected."
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "SC-VideoGridTabs",
        "blocks": [
          {
            "type": "tab",
            "settings": {
              "title": "Our Faves"
            }
          },
          {
            "type": "video"
          },
          {
            "type": "video"
          },
          {
            "type": "video"
          },
          {
            "type": "tab",
            "settings": {
              "title": "How-Tos"
            }
          },
          {
            "type": "video"
          },
          {
            "type": "video"
          },
          {
            "type": "video"
          }
        ]
      }
    ]
  }
{% endschema %}